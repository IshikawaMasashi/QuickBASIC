{"version":3,"sources":["webpack://ReactContexify/webpack/universalModuleDefinition","webpack://ReactContexify/webpack/bootstrap","webpack://ReactContexify/external \"react\"","webpack://ReactContexify/./src/utils/styles.ts","webpack://ReactContexify/external \"prop-types\"","webpack://ReactContexify/./node_modules/classnames/index.js","webpack://ReactContexify/./src/utils/actions.ts","webpack://ReactContexify/./src/utils/eventManager.ts","webpack://ReactContexify/./src/components/cloneItem.ts","webpack://ReactContexify/./src/components/ConsoleMessage.tsx","webpack://ReactContexify/./src/components/ConsolePrompt.tsx","webpack://ReactContexify/./src/index.ts","webpack://ReactContexify/./src/components/Menu.tsx","webpack://ReactContexify/./src/components/Portal.tsx","webpack://ReactContexify/external \"react-dom\"","webpack://ReactContexify/./src/components/Item.tsx","webpack://ReactContexify/./src/components/Separator.tsx","webpack://ReactContexify/./src/components/IconFont.tsx","webpack://ReactContexify/./src/components/Submenu.tsx","webpack://ReactContexify/./src/components/MenuProvider.tsx","webpack://ReactContexify/./src/utils/contextMenu.ts","webpack://ReactContexify/./src/components/react-console.tsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__12__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","styles","menu","submenu","submenuArrow","separator","item","itemDisabled","itemContent","itemIcon","theme","animationWillEnter","animationWillLeave","light","dark","animation","fade","flip","pop","zoom","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","join","default","undefined","HIDE_ALL","DISPLAY_MENU","id","eventManager","eventList","Map","on","event","callback","_this","this","has","set","Set","add","delete","emit","args","_i","forEach","cb","concat","console","warn","react_1","cloneItem","children","props","Children","map","toArray","filter","child","Boolean","cloneElement","React","__importStar","ConsoleMessage","_a","type","_b","createElement","className","val","JSON","stringify","defaultProps","useEffect","useRef","point","_c","_d","label","argument","cursorRef","idle","updateSemaphoreRef","current","setTimeout","idx","lastIndexOf","substring","ref","Menu_1","Menu","Item_1","Item","Separator_1","Separator","IconFont_1","IconFont","Submenu_1","Submenu","MenuProvider_1","MenuProvider","contextMenu_1","contextMenu","styles_1","ConsoleMessage_1","ConsolePrompt_1","ConsolePrompt","react_console_1","Console","prop_types_1","__importDefault","classnames_1","cloneItem_1","Portal_1","actions_1","eventManager_1","KEY","ENTER","ESC","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","_super","state","x","y","visible","nativeEvent","propsFromTrigger","onShown","onHidden","unsub","bindWindowEvent","addEventListener","hide","handleKeyboard","unBindWindowEvent","removeEventListener","onMouseEnter","onMouseLeave","e","button","ctrlKey","setState","keyCode","setRef","menuRef","show","stopPropagation","getMousePosition","setMenuPosition","__extends","componentDidMount","componentWillUnmount","componentDidUpdate","_","prevState","windowWidth","innerWidth","windowHeight","innerHeight","menuWidth","offsetWidth","menuHeight","offsetHeight","pos","clientX","clientY","changedTouches","render","style","cssClasses","menuStyle","__assign","left","top","opacity","Portal","propTypes","oneOfType","string","number","isRequired","node","Component","react_dom_1","canRender","container","document","body","appendChild","removeChild","createPortal","PureComponent","noop","handleClick","isDisabled","onClick","data","disabled","role","func","bool","bottom","rect","getBoundingClientRect","right","arrow","submenuStyle","childrenRefs","handleEvent","preventDefault","setChildRef","getChildren","component","storeRef","rest","__rest","isValidElement","attributes","hideAll","useState","forwardRef","useImperativeHandle","nextLabel","promptLabel","promptText","setPromptText","setPoint","restoreText","setRestoreText","setArgument","_e","lastCommand","setLastCommand","_f","typer","setTyper","_g","typerRef","containerRef","focusRef","log","messages","message","scrollIfBottom","enter","acceptInput","currLabel","autofocus","focus","getSelection","toString","scrollToBottom","beginningOfLine","endOfLine","forwardChar","movePoint","backwardChar","forwardWord","nextWord","backwardWord","previousWord","acceptLine","continue","consoleInsert","command","history_1","history","log_1","historyn","handler","previousHistory","rotateHistory","nextHistory","beginningOfHistory","endOfHistory","triggerSearch","searchDirection","reverseSearchHistory","forwardSearchHistory","searchText","searchHistory","searchInit","nonIncrementalReverseSearchHistory","nonIncrementalForwardSearchHistory","yankNthArg","yankLastArg","deleteChar","backwardDeleteChar","killLine","kill","unshift","killn","backwardKillLine","killWord","backwardKillWord","yank","yankPop","rotateRing","complete","words","split","curr","completions","newPoint","log_2","prefixMeta","cancelCommand","log_3","cancel","textInsert","insert","text","replace","newPromptText","max","search","exec","index","ringn","ring","circular","direction","next","inc","entry","indexOf","scrollSemaphoreRef","scrollTop","scrollHeight","scrollIfBottomTrue","documentElement","clientHeight","clientWidth","scrollIntoView","welcomeMessage","overflow","height","width","autoComplete","autoCorrect","autoCapitalize","spellCheck","outline","color","backgroundColor","border","resize","onBlur","onKeyDown","keyCodes","13","37","39","38","40","8","46","35","36","9","27","ctrlCodes","65","69","70","66","80","78","82","83","68","75","85","89","67","metaCodes","190","metaShiftCodes","188","189","metaCtrlCodes","altKey","shiftKey","onChange","onPaste","clipboardData","getData"],"mappings":"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","file":"ReactContexify.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"prop-types\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactContexify\"] = factory(require(\"react\"), require(\"prop-types\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactContexify\"] = factory(root[\"react\"], root[\"prop-types\"], root[\"react-dom\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__12__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/*\n * css classes mapping\n * */\nexport const styles = {\n  menu: 'react-contexify',\n  submenu: 'react-contexify react-contexify__submenu',\n  submenuArrow: 'react-contexify__submenu-arrow',\n  separator: 'react-contexify__separator',\n  item: 'react-contexify__item',\n  itemDisabled: 'react-contexify__item--disabled',\n  itemContent: 'react-contexify__item__content',\n  itemIcon: 'react-contexify__item__icon',\n  theme: 'react-contexify__theme--',\n  animationWillEnter: 'react-contexify__will-enter--',\n  animationWillLeave: 'react-contexify__will-leave--'\n};\n\n// I could use enum instead for both interfaces\n\nexport interface BuiltInTheme {\n  light: string;\n  dark: string;\n}\n\nexport interface BuiltInAnimation {\n  fade: string;\n  flip: string;\n  pop: string;\n  zoom: string;\n}\n\nexport const theme: BuiltInTheme = {\n  light: 'light',\n  dark: 'dark'\n};\n\nexport const animation: BuiltInAnimation = {\n  fade: 'fade',\n  flip: 'flip',\n  pop: 'pop',\n  zoom: 'zoom'\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { MenuId } from '../types';\n\nexport const HIDE_ALL = 0;\nexport const DISPLAY_MENU = (id: MenuId) => `DISPLAY_${id}`;\n","type Callback = (...args: any) => void;\ntype EventId = number | string;\n\ninterface EventManager {\n  eventList: Map<EventId, Set<Callback>>;\n  on: (event: EventId, callback: Callback) => () => boolean;\n  emit: (event: EventId, ...args: any) => boolean;\n}\n\nconst eventManager: EventManager = {\n  eventList: new Map(),\n  on(event, callback) {\n    this.eventList.has(event) || this.eventList.set(event, new Set());\n    this.eventList.get(event)!.add(callback);\n\n    return () => this.eventList.get(event)!.delete(callback);\n  },\n  emit(event, ...args) {\n    if (!this.eventList.has(event)) {\n      console.warn(\n        `<${event}> Event is not registered. Did you forgot to bind the event ?`\n      );\n      return false;\n    }\n    this.eventList.get(event)!.forEach(cb => cb.call(this, ...args));\n\n    return true;\n  }\n};\n\nexport { eventManager };\n","import { Children, cloneElement, ReactNode, ReactElement } from 'react';\nimport { TriggerEvent } from '../types';\n\nexport function cloneItem(\n  children: ReactNode,\n  props: { nativeEvent: TriggerEvent; propsFromTrigger?: object }\n) {\n  return Children.map(\n    // remove null item\n    Children.toArray(children).filter(child => Boolean(child)),\n    item => cloneElement(item as ReactElement<any>, props)\n  );\n}\n","'use strict';\r\n\r\nimport * as React from 'react';\r\n\r\ninterface ConsoleMessageProps {\r\n  type?: string;\r\n  value?: any[];\r\n}\r\n\r\nconst ConsoleMessage: React.FC<ConsoleMessageProps> = ({\r\n  type,\r\n  value = [],\r\n  children\r\n}) => {\r\n  //constructor(props: ConsoleMessageProps) {\r\n  //  super(props);\r\n  //}\r\n  // public render() {\r\n  //const {\r\n  //  type,\r\n  //  value\r\n  //} = this.props;\r\n  return (\r\n    <div\r\n      className={\r\n        'react-console-message' + (type ? ' react-console-message-' + type : '')\r\n      }\r\n    >\r\n      {value\r\n        .map((val: any) => {\r\n          if (typeof val == 'string') {\r\n            return val;\r\n          } else {\r\n            return JSON.stringify(val);\r\n          }\r\n        })\r\n        .join('\\n')}\r\n    </div>\r\n  );\r\n  // }\r\n};\r\n\r\nConsoleMessage.defaultProps = {\r\n  // type: undefined as string,\r\n  value: []\r\n};\r\n\r\nexport default ConsoleMessage;\r\n","'use strict';\r\n\r\nimport * as React from 'react';\r\n\r\nconst { useEffect, useRef } = React;\r\ninterface Props {\r\n  point?: number;\r\n  value?: string;\r\n  label?: string;\r\n  argument?: string;\r\n}\r\n\r\n// interface ConsolePromptState {}\r\n\r\nexport default function ConsolePrompt({\r\n  point = -1,\r\n  value = '',\r\n  label = '> ',\r\n  argument\r\n}: Props) {\r\n  // static defaultProps: ConsolePromptProps = {\r\n  //   point: -1,\r\n  //   value: \"\",\r\n  //   label: \"> \"\r\n  //   // argument: null as string\r\n  // };\r\n  const cursorRef = useRef<HTMLSpanElement>(null);\r\n  // Component Lifecycle\r\n  // componentDidMount() {\r\n  //   this.idle();\r\n  // }\r\n  useEffect(() => {\r\n    idle();\r\n    return () => {};\r\n  }, []);\r\n  // componentDidUpdate() {\r\n  //   this.idle();\r\n  // }\r\n  useEffect(() => {\r\n    idle();\r\n    // return () => {};\r\n  });\r\n\r\n  // DOM Management\r\n  const updateSemaphoreRef = useRef(0);\r\n  const idle = () => {\r\n    // Blink cursor when idle\r\n    if (cursorRef.current) {\r\n      if (updateSemaphoreRef.current == 0) {\r\n        cursorRef.current.className = 'react-console-cursor';\r\n      }\r\n      updateSemaphoreRef.current++;\r\n      window.setTimeout(() => {\r\n        updateSemaphoreRef.current--;\r\n        if (updateSemaphoreRef.current == 0 && cursorRef.current) {\r\n          cursorRef.current.className =\r\n            'react-console-cursor react-console-cursor-idle';\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n  const renderValue = () => {\r\n    if (point < 0) {\r\n      return [value];\r\n    } else if (point == value.length) {\r\n      return [\r\n        value,\r\n        <span ref={cursorRef} key=\"cursor\" className=\"react-console-cursor\">\r\n          &nbsp;\r\n        </span>\r\n      ];\r\n    } else {\r\n      return [\r\n        value.substring(0, point),\r\n        <span ref={cursorRef} key=\"cursor\" className=\"react-console-cursor\">\r\n          {value.substring(point, point + 1)}\r\n        </span>,\r\n        value.substring(point + 1)\r\n      ];\r\n    }\r\n  };\r\n  // render() {\r\n  // let label = props.label;\r\n  if (argument) {\r\n    let idx = label.lastIndexOf('\\n');\r\n    if (idx >= 0) {\r\n      label = label.substring(0, idx + 1);\r\n    } else {\r\n      label = '';\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"react-console-prompt-box\">\r\n      <span className=\"react-console-prompt-label\">{label}</span>\r\n      <span className=\"react-console-prompt-argument\">{argument}</span>\r\n      <span className=\"react-console-prompt\">{renderValue()}</span>\r\n    </div>\r\n  );\r\n  // }\r\n}\r\n\r\n// ConsolePrompt.defaultProps = {\r\n//   point: -1,\r\n//   value: \"\",\r\n//   label: \"> \"\r\n//   // argument: null as string\r\n// };\r\n","export { Menu } from './components/Menu';\nexport { Item } from './components/Item';\nexport { Separator } from './components/Separator';\nexport { IconFont } from './components/IconFont';\nexport { Submenu } from './components/Submenu';\nexport { MenuProvider } from './components/MenuProvider';\n\nexport { contextMenu } from './utils/contextMenu';\nexport { theme, animation } from './utils/styles';\n\nexport { default as ConsoleMessage } from './components/ConsoleMessage';\nexport { default as ConsolePrompt } from './components/ConsolePrompt';\nexport { default as Console } from './components/react-console';\n","/* global: window */\nimport React, { Component, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { cloneItem } from './cloneItem';\nimport { Portal } from './Portal';\n\nimport { HIDE_ALL, DISPLAY_MENU } from '../utils/actions';\nimport { styles } from '../utils/styles';\nimport { eventManager } from '../utils/eventManager';\nimport { TriggerEvent, StyleProps, MenuId } from '../types';\n\nconst KEY = {\n  ENTER: 13,\n  ESC: 27,\n  ARROW_UP: 38,\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39\n};\n\nexport interface MenuProps extends StyleProps {\n  /**\n   * Unique id to identify the menu. Use to Trigger the corresponding menu\n   */\n  id: MenuId;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Theme is appended to `react-contexify__theme--${given theme}`.\n   *\n   * Built-in theme are `light` and `dark`\n   */\n  theme?: string;\n\n  /**\n   * Animation is appended to `.react-contexify__will-enter--${given animation}`\n   *\n   * Built-in animations are fade, flip, pop, zoom\n   */\n  animation?: string;\n\n  /**\n   * Invoked when the menu is shown.\n   */\n  onShown?: () => void;\n\n  /**\n   * Invoked when the menu is hidden.\n   */\n  onHidden?: () => void;\n}\n\ninterface MenuState {\n  x: number;\n  y: number;\n  visible: boolean;\n  nativeEvent: TriggerEvent;\n  propsFromTrigger: object;\n}\n\nclass Menu extends Component<MenuProps, MenuState> {\n  static propTypes = {\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    children: PropTypes.node.isRequired,\n    theme: PropTypes.string,\n    animation: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n\n  state = {\n    x: 0,\n    y: 0,\n    visible: false,\n    nativeEvent: {} as TriggerEvent,\n    propsFromTrigger: {},\n    onShown: null,\n    onHidden: null\n  };\n\n  menuRef!: HTMLDivElement;\n  unsub: (() => boolean)[] = [];\n\n  componentDidMount() {\n    this.unsub.push(eventManager.on(DISPLAY_MENU(this.props.id), this.show));\n    this.unsub.push(eventManager.on(HIDE_ALL, this.hide));\n  }\n\n  componentWillUnmount() {\n    this.unsub.forEach(cb => cb());\n    this.unBindWindowEvent();\n  }\n\n  componentDidUpdate(_: Readonly<MenuProps>, prevState: Readonly<MenuState>) {\n    if (this.state.visible !== prevState.visible) {\n      if (this.state.visible && this.props.onShown) {\n        this.props.onShown();\n      } else if (!this.state.visible && this.props.onHidden) {\n        this.props.onHidden();\n      }\n    }\n  }\n\n  bindWindowEvent = () => {\n    window.addEventListener('resize', this.hide);\n    window.addEventListener('contextmenu', this.hide);\n    window.addEventListener('mousedown', this.hide);\n    window.addEventListener('click', this.hide);\n    window.addEventListener('scroll', this.hide);\n    window.addEventListener('keydown', this.handleKeyboard);\n  };\n\n  unBindWindowEvent = () => {\n    window.removeEventListener('resize', this.hide);\n    window.removeEventListener('contextmenu', this.hide);\n    window.removeEventListener('mousedown', this.hide);\n    window.removeEventListener('click', this.hide);\n    window.removeEventListener('scroll', this.hide);\n    window.removeEventListener('keydown', this.handleKeyboard);\n  };\n\n  onMouseEnter = () => window.removeEventListener('mousedown', this.hide);\n\n  onMouseLeave = () => window.addEventListener('mousedown', this.hide);\n\n  hide = (event?: Event) => {\n    // Safari trigger a click event when you ctrl + trackpad\n    // Firefox:  trigger a click event when right click occur\n    const e = event as KeyboardEvent & MouseEvent;\n\n    if (\n      typeof e !== 'undefined' &&\n      (e.button === 2 || e.ctrlKey === true) &&\n      e.type !== 'contextmenu'\n    ) {\n      return;\n    }\n\n    this.unBindWindowEvent();\n    this.setState({ visible: false });\n  };\n\n  handleKeyboard = (e: KeyboardEvent) => {\n    if (e.keyCode === KEY.ENTER || e.keyCode === KEY.ESC) {\n      this.unBindWindowEvent();\n      this.setState({ visible: false });\n    }\n  };\n\n  setRef = (ref: HTMLDivElement) => {\n    this.menuRef = ref;\n  };\n\n  setMenuPosition() {\n    const { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = this.menuRef;\n    let { x, y } = this.state;\n\n    if (x + menuWidth > windowWidth) {\n      x -= x + menuWidth - windowWidth;\n    }\n\n    if (y + menuHeight > windowHeight) {\n      y -= y + menuHeight - windowHeight;\n    }\n\n    this.setState(\n      {\n        x,\n        y\n      },\n      this.bindWindowEvent\n    );\n  }\n\n  getMousePosition(e: TriggerEvent) {\n    const pos = {\n      x: e.clientX,\n      y: e.clientY\n    };\n\n    if (\n      e.type === 'touchend' &&\n      (!pos.x || !pos.y) &&\n      (e.changedTouches && e.changedTouches.length > 0)\n    ) {\n      pos.x = e.changedTouches[0].clientX;\n      pos.y = e.changedTouches[0].clientY;\n    }\n\n    if (!pos.x || pos.x < 0) {\n      pos.x = 0;\n    }\n\n    if (!pos.y || pos.y < 0) {\n      pos.y = 0;\n    }\n\n    return pos;\n  }\n\n  show = (e: TriggerEvent, props: object) => {\n    e.stopPropagation();\n    eventManager.emit(HIDE_ALL);\n\n    const { x, y } = this.getMousePosition(e);\n\n    this.setState(\n      {\n        visible: true,\n        x,\n        y,\n        nativeEvent: e,\n        propsFromTrigger: props\n      },\n      this.setMenuPosition\n    );\n  };\n\n  render() {\n    const { theme, animation, style, className, children } = this.props;\n    const { visible, nativeEvent, propsFromTrigger, x, y } = this.state;\n\n    const cssClasses = cx(styles.menu, className, {\n      [styles.theme + theme]: theme,\n      [styles.animationWillEnter + animation]: animation\n    });\n    const menuStyle = {\n      ...style,\n      left: x,\n      top: y + 1,\n      opacity: 1\n    };\n\n    return (\n      <Portal>\n        {visible && (\n          <div\n            className={cssClasses}\n            style={menuStyle}\n            ref={this.setRef}\n            onMouseEnter={this.onMouseEnter}\n            onMouseLeave={this.onMouseLeave}\n          >\n            <div>\n              {cloneItem(children, {\n                nativeEvent,\n                propsFromTrigger\n              })}\n            </div>\n          </div>\n        )}\n      </Portal>\n    );\n  }\n}\n\nexport { Menu };\n","import { PureComponent, ReactNode } from 'react';\nimport { createPortal } from 'react-dom';\n\nclass Portal extends PureComponent<{ children: ReactNode }> {\n  state = {\n    canRender: false\n  };\n  container = {} as HTMLDivElement;\n\n  componentDidMount() {\n    this.container = document.createElement('div');\n    document.body.appendChild(this.container);\n    this.setState({\n      canRender: true\n    });\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.container);\n  }\n  render() {\n    return (\n      this.state.canRender && createPortal(this.props.children, this.container)\n    );\n  }\n}\n\nexport { Portal };\n","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","import React, { Component, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { styles } from '../utils/styles';\nimport {\n  MenuItemEventHandler,\n  TriggerEvent,\n  StyleProps,\n  InternalProps\n} from '../types';\n\nexport interface ItemProps extends StyleProps, InternalProps {\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Passed to the `Item` onClick callback. Accessible via `props`\n   */\n  data?: object;\n\n  /**\n   * Disable or not the `Item`. If a function is used, a boolean must be returned\n   */\n  disabled: boolean | ((args: MenuItemEventHandler) => boolean);\n\n  /**\n   * Callback when the current `Item` is clicked. The callback give you access to the current event and also the data passed\n   * to the `Item`.\n   * `({ event, props }) => ...`\n   */\n  onClick: (args: MenuItemEventHandler) => any;\n}\n\nconst noop = () => {};\n\nclass Item extends Component<ItemProps> {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    data: PropTypes.object,\n    disabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onClick: PropTypes.func,\n    nativeEvent: PropTypes.object,\n    propsFromTrigger: PropTypes.object,\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n\n  static defaultProps = {\n    disabled: false,\n    onClick: noop\n  };\n\n  isDisabled: boolean;\n\n  constructor(props: ItemProps) {\n    super(props);\n    const { disabled, nativeEvent, propsFromTrigger, data } = this.props;\n\n    this.isDisabled =\n      typeof disabled === 'function'\n        ? disabled({\n            event: nativeEvent as TriggerEvent,\n            props: { ...propsFromTrigger, ...data }\n          })\n        : disabled;\n  }\n\n  handleClick = (e: React.MouseEvent) => {\n    this.isDisabled\n      ? e.stopPropagation()\n      : this.props.onClick({\n          event: this.props.nativeEvent as TriggerEvent,\n          props: { ...this.props.propsFromTrigger, ...this.props.data }\n        });\n  };\n\n  render() {\n    const { className, style, children } = this.props;\n\n    const cssClasses = cx(styles.item, className, {\n      [`${styles.itemDisabled}`]: this.isDisabled\n    });\n\n    return (\n      <div\n        className={cssClasses}\n        style={style}\n        onClick={this.handleClick}\n        role=\"presentation\"\n      >\n        <div className={styles.itemContent}>{children}</div>\n      </div>\n    );\n  }\n}\n\nexport { Item };\n","import React, { SFC } from 'react';\n\nimport { styles } from '../utils/styles';\n\nexport const Separator: SFC = () => <div className={styles.separator} />;\n","import React, { SFC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { styles } from '../utils/styles';\nimport { StyleProps } from '../types';\n\nexport interface IconFontProps extends StyleProps {\n  /**\n   * Any valid node that can be rendered\n   */\n  children?: ReactNode;\n}\n\nconst IconFont: SFC<IconFontProps> = ({ className, style, children }) => (\n  <i className={cx(styles.itemIcon, className)} style={style}>\n    {children || ''}\n  </i>\n);\n\nIconFont.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object\n} as any;\n// Hack till the typedef is fixed.\n\nexport { IconFont };\n","import React, { Component, ReactNode, SyntheticEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { cloneItem } from './cloneItem';\nimport { styles } from '../utils/styles';\nimport {\n  MenuItemEventHandler,\n  TriggerEvent,\n  StyleProps,\n  InternalProps\n} from '../types';\n\nexport interface SubMenuProps extends StyleProps, InternalProps {\n  /**\n   * Any valid node that can be rendered\n   */\n  label: ReactNode;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Render a custom arrow\n   */\n  arrow: ReactNode;\n\n  /**\n   * Disable or not the `Submenu`. If a function is used, a boolean must be returned\n   */\n  disabled: boolean | ((args: MenuItemEventHandler) => boolean);\n}\n\ninterface SubMenuState {\n  left?: string | number;\n  right?: string | number;\n  top?: string | number;\n  bottom?: string | number;\n}\n\nclass Submenu extends Component<SubMenuProps, SubMenuState> {\n  static propTypes = {\n    label: PropTypes.node.isRequired,\n    children: PropTypes.node.isRequired,\n    nativeEvent: PropTypes.object,\n    arrow: PropTypes.node,\n    disabled: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    arrow: '▶',\n    disabled: false,\n    nativeEvent: {} as TriggerEvent\n  };\n\n  state = {\n    left: '100%',\n    top: 0,\n    bottom: 'initial'\n  };\n\n  menu!: HTMLElement;\n\n  setRef = (ref: HTMLDivElement) => {\n    this.menu = ref;\n  };\n\n  componentDidMount() {\n    const { innerWidth, innerHeight } = window;\n    const rect = this.menu.getBoundingClientRect();\n    const style: SubMenuState = {};\n\n    if (rect.right < innerWidth) {\n      style.left = '100%';\n      style.right = undefined;\n    } else {\n      style.right = '100%';\n      style.left = undefined;\n    }\n\n    if (rect.bottom > innerHeight) {\n      style.bottom = 0;\n      style.top = 'initial';\n    } else {\n      style.bottom = 'initial';\n      style.top = 0;\n    }\n\n    this.setState(style);\n  }\n\n  handleClick(e: SyntheticEvent) {\n    e.stopPropagation();\n  }\n\n  render() {\n    const {\n      arrow,\n      disabled,\n      className,\n      style,\n      label,\n      nativeEvent,\n      children,\n      propsFromTrigger\n    } = this.props;\n\n    const cssClasses = cx(styles.item, className, {\n      [`${styles.itemDisabled}`]:\n        typeof disabled === 'function'\n          ? disabled({\n              event: nativeEvent as TriggerEvent,\n              props: { ...propsFromTrigger }\n            })\n          : disabled\n    });\n\n    const submenuStyle = {\n      ...style,\n      ...this.state\n    };\n\n    return (\n      <div className={cssClasses} role=\"presentation\">\n        <div className={styles.itemContent} onClick={this.handleClick}>\n          {label}\n          <span className={styles.submenuArrow}>{arrow}</span>\n        </div>\n        <div className={styles.submenu} ref={this.setRef} style={submenuStyle}>\n          {cloneItem(children, {\n            propsFromTrigger,\n            nativeEvent: nativeEvent as TriggerEvent\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Submenu };\n","import {\n  Component,\n  createElement,\n  Children,\n  cloneElement,\n  isValidElement,\n  ReactNode,\n  SyntheticEvent,\n  ReactElement\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DISPLAY_MENU } from '../utils/actions';\nimport { eventManager } from '../utils/eventManager';\nimport { MenuId, StyleProps } from '../types';\n\nexport interface MenuProviderProps extends StyleProps {\n  /**\n   * Unique id to identify the menu. Use to Trigger the corresponding menu\n   */\n  id: MenuId;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Any valid node that can be rendered or a function returning a valid react node\n   */\n  component: ReactNode | ((args?: any) => ReactNode);\n\n  /**\n   * Render props\n   */\n  render?: (args?: any) => ReactNode;\n\n  /**\n   * Any react event\n   * `onClick`, `onContextMenu`, ...\n   */\n  event: string;\n\n  /**\n   * Store children ref\n   * `default: true`\n   */\n  storeRef: boolean;\n\n  /**\n   * Any valid object, data are passed to the menu item callback\n   */\n  data?: object;\n}\n\nclass MenuProvider extends Component<MenuProviderProps> {\n  static propTypes = {\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    children: PropTypes.node.isRequired,\n    component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    render: PropTypes.func,\n    event: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    storeRef: PropTypes.bool,\n    data: PropTypes.object\n  };\n\n  static defaultProps = {\n    component: 'div',\n    event: 'onContextMenu',\n    storeRef: true\n  };\n\n  childrenRefs = [] as HTMLElement[];\n\n  handleEvent = (e: SyntheticEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    eventManager.emit(DISPLAY_MENU(this.props.id), e.nativeEvent, {\n      ref:\n        this.childrenRefs.length === 1\n          ? this.childrenRefs[0]\n          : this.childrenRefs,\n      ...this.props.data\n    });\n  };\n\n  setChildRef = (ref: HTMLElement) =>\n    ref === null || this.childrenRefs.push(ref);\n\n  getChildren() {\n    // remove all the props specific to the provider\n    const {\n      id,\n      component,\n      event,\n      children,\n      className,\n      style,\n      storeRef,\n      data,\n      ...rest\n    } = this.props;\n\n    // reset refs\n    this.childrenRefs = [];\n\n    return Children.map(children, child =>\n      isValidElement(child)\n        ? cloneElement(child as ReactElement<any>, {\n            ...rest,\n            ...(storeRef ? { ref: this.setChildRef } : {})\n          })\n        : child\n    );\n  }\n\n  render() {\n    const { component, render, event, className, style } = this.props;\n    const attributes = {\n      [event]: this.handleEvent,\n      className,\n      style\n    };\n\n    if (typeof render === 'function') {\n      return render({ ...attributes, children: this.getChildren() });\n    }\n\n    return createElement(component as any, attributes, this.getChildren());\n  }\n}\n\nexport { MenuProvider };\n","import { eventManager } from './eventManager';\nimport { HIDE_ALL, DISPLAY_MENU } from './actions';\nimport { MenuId } from '../types';\nimport React, { SyntheticEvent } from 'react';\n\nexport interface ContextMenu {\n  show: (params: {\n    id: MenuId;\n    event: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent;\n    props?: object;\n  }) => void;\n  hideAll: () => void;\n}\n\nconst contextMenu: ContextMenu = {\n  show({ id, event, props }) {\n    eventManager.emit(\n      DISPLAY_MENU(id),\n      (event as SyntheticEvent).nativeEvent || event,\n      props\n    );\n  },\n  hideAll() {\n    eventManager.emit(HIDE_ALL);\n  }\n};\n\nexport { contextMenu };\n","import * as React from 'react';\r\n// import './react-console.scss';\r\n// import \"./react-console.css\";\r\n\r\nimport ConsolePrompt from './ConsolePrompt';\r\nimport ConsoleMessage from './ConsoleMessage';\r\n\r\nconst { useState, useRef, forwardRef, useImperativeHandle, useEffect } = React;\r\n\r\nexport interface LogMessage {\r\n  type?: string;\r\n  value: any[];\r\n}\r\nexport interface LogEntry {\r\n  label: string;\r\n  command: string;\r\n  message: LogMessage[];\r\n}\r\n\r\nexport interface ConsoleProps {\r\n  handler: (command: string) => any;\r\n  cancel?: () => any;\r\n  complete?: (words: string[], curr: number, promptText: string) => string[];\r\n  continue?: (promptText: string) => boolean;\r\n  autofocus?: boolean;\r\n  promptLabel?: string | (() => string);\r\n  welcomeMessage?: string;\r\n}\r\nexport const enum ConsoleCommand {\r\n  Default,\r\n  Search,\r\n  Kill,\r\n  Yank\r\n}\r\nexport const enum SearchDirection {\r\n  Reverse,\r\n  Forward\r\n}\r\nexport interface ConsoleState {\r\n  focus?: boolean;\r\n  acceptInput?: boolean;\r\n  typer?: string;\r\n  point?: number;\r\n  currLabel?: string;\r\n  promptText?: string;\r\n  restoreText?: string;\r\n  searchText?: string;\r\n  searchDirection?: SearchDirection;\r\n  searchInit?: boolean;\r\n  log?: LogEntry[];\r\n  history?: string[];\r\n  historyn?: number;\r\n  kill?: string[];\r\n  killn?: number;\r\n  argument?: string;\r\n  lastCommand?: ConsoleCommand;\r\n}\r\n\r\n// type LogRecord = {};\r\n\r\ntype ForwardedRef = {\r\n  log: (...messages: any[]) => void;\r\n  enter: () => void;\r\n};\r\n\r\n// const Console: React.FC<ConsoleProps> = props => {\r\nconst Console = forwardRef<ForwardedRef, ConsoleProps>((props, ref) => {\r\n  const nextLabel = () => {\r\n    if (typeof props.promptLabel === 'string') {\r\n      return props.promptLabel as string;\r\n    } else {\r\n      return (props.promptLabel as () => string)();\r\n    }\r\n  };\r\n\r\n  // const [logRecords, setLogRecords] = useState<LogRecord[]>([]);\r\n  const [promptText, setPromptText] = useState('');\r\n  const [point, setPoint] = useState(0);\r\n  const [restoreText, setRestoreText] = useState('');\r\n  const [argument, setArgument] = useState<string | undefined>(undefined);\r\n  const [lastCommand, setLastCommand] = useState(ConsoleCommand.Default);\r\n  const [typer, setTyper] = useState('');\r\n  const [state, setState] = useState({\r\n    focus: false,\r\n    acceptInput: true,\r\n    // typer: \"\",\r\n    // point: 0,\r\n    currLabel: nextLabel(),\r\n    // promptText: \"\",\r\n    // restoreText: \"\",\r\n    searchText: '',\r\n    searchDirection: null as any,\r\n    searchInit: false,\r\n    log: [] as any[],\r\n    history: [] as any[],\r\n    historyn: 0,\r\n    kill: [] as any,\r\n    killn: 0\r\n    // argument: null,\r\n    // lastCommand: ConsoleCommand.Default\r\n  });\r\n\r\n  const typerRef = useRef<HTMLTextAreaElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const focusRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Command API\r\n  const log = (...messages: any[]) => {\r\n    let log = state.log;\r\n    log[state.log.length - 1].message.push({ value: messages });\r\n    setState({ ...state, log: log });\r\n    scrollIfBottom();\r\n  };\r\n\r\n  // const logX = (type: string, ...messages: any[]) => {\r\n  //   let log = state.log;\r\n  //   log[state.log.length - 1].message.push({\r\n  //     type: type,\r\n  //     value: messages\r\n  //   });\r\n  //   setState({ ...state, log: log });\r\n  //   scrollIfBottom();\r\n  // };\r\n\r\n  const enter = () => {\r\n    setState({ ...state, acceptInput: true, currLabel: nextLabel() });\r\n    scrollIfBottom();\r\n  };\r\n\r\n  // Component Lifecycle\r\n  useEffect(() => {\r\n    if (props.autofocus) {\r\n      focus();\r\n    }\r\n  }, []);\r\n\r\n  // Event Handlers\r\n  const focus = () => {\r\n    if (!window.getSelection) {\r\n      return;\r\n    }\r\n    if (!window.getSelection()!.toString()) {\r\n      typerRef.current!.focus();\r\n      setState({ ...state, focus: true });\r\n      scrollToBottom();\r\n    }\r\n  };\r\n  const blur = () => {\r\n    setState({ ...state, focus: false });\r\n  };\r\n  const keyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    interface keyMap {\r\n      [key: number]: () => void;\r\n    }\r\n    let keyCodes: keyMap = {\r\n      // return\r\n      13: acceptLine,\r\n      // left\r\n      37: backwardChar,\r\n      // right\r\n      39: forwardChar,\r\n      // up\r\n      38: previousHistory,\r\n      // down\r\n      40: nextHistory,\r\n      // backspace\r\n      8: backwardDeleteChar,\r\n      // delete\r\n      46: deleteChar,\r\n      // end\r\n      35: endOfLine,\r\n      // start\r\n      36: beginningOfLine,\r\n      // tab\r\n      9: complete,\r\n      // esc\r\n      27: prefixMeta\r\n    };\r\n    var ctrlCodes: keyMap = {\r\n      // C-a\r\n      65: beginningOfLine,\r\n      // C-e\r\n      69: endOfLine,\r\n      // C-f\r\n      70: forwardChar,\r\n      // C-b\r\n      66: backwardChar,\r\n      // C-l TODO\r\n      //76: this.clearScreen,\r\n      // C-p\r\n      80: previousHistory,\r\n      // C-n\r\n      78: nextHistory,\r\n      // C-r\r\n      82: reverseSearchHistory,\r\n      // C-s\r\n      83: forwardSearchHistory,\r\n      // C-d\r\n      68: deleteChar, // TODO EOF\r\n      // C-q TODO\r\n      //81: this.quotedInsert,\r\n      // C-v TODO\r\n      //86: this.quotedInsert,\r\n      // C-t TODO\r\n      //84: this.transposeChars,\r\n      // C-k\r\n      75: killLine,\r\n      // C-u\r\n      85: backwardKillLine,\r\n      // C-y TODO\r\n      89: yank,\r\n      // C-c\r\n      67: cancelCommand\r\n      // C-w TODO\r\n      //87: this.killPreviousWhitespace,\r\n      // C-] TODO\r\n      //221: this.characterSearch,\r\n      // C-x TODO\r\n      //88: this.prefixCtrlX,\r\n    };\r\n    //var ctrlXCodes: keyMap = { // TODO state\r\n    //    // C-x Rubout\r\n    //    8: this.backwardKillLine,\r\n    //    // C-x ( TODO\r\n    //    //57: this.startKbdMacro,\r\n    //    // C-x ) TODO\r\n    //    //48: this.endKbdMacro,\r\n    //    // C-x e TODO\r\n    //    //69: this.callLastKbdMacro,\r\n    //    // C-x C-u TODO\r\n    //    //85: this.undo,\r\n    //    // C-x C-x TODO\r\n    //    //88: this.exchangePointAndMark,\r\n    //};\r\n    //var ctrlShiftCodes: keyMap = {\r\n    //    // C-_ TODO\r\n    //    //189: this.undo,\r\n    //    // C-@ TODO\r\n    //    //50: this.setMark,\r\n    //};\r\n    var metaCodes: keyMap = {\r\n      // M-f\r\n      70: forwardWord,\r\n      // M-b\r\n      66: backwardWord,\r\n      // M-p\r\n      80: nonIncrementalReverseSearchHistory,\r\n      // M-n\r\n      78: nonIncrementalForwardSearchHistory,\r\n      // M-.\r\n      190: yankLastArg,\r\n      // M-TAB TODO\r\n      //9: this.tabInsert,\r\n      // M-t TODO\r\n      //84: this.transposeWords,\r\n      // M-u TODO\r\n      //85: this.upcaseWord,\r\n      // M-l TODO\r\n      //76: this.downcaseWord,\r\n      // M-c TODO\r\n      //67: this.capitalizeWord,\r\n      // M-d\r\n      68: killWord,\r\n      // M-backspace\r\n      8: backwardKillWord,\r\n      // M-w TODO\r\n      //87: this.unixWordRubout,\r\n      // M-\\ TODO\r\n      //220: this.deleteHorizontalSpace,\r\n      // M-y\r\n      89: yankPop\r\n      // M-0 TODO\r\n      //48: () => this.digitArgument(0),\r\n      // M-1 TODO\r\n      //49: () => this.digitArgument(1),\r\n      // M-2 TODO\r\n      //50: () => this.digitArgument(2),\r\n      // M-3 TODO\r\n      //51: () => this.digitArgument(3),\r\n      // M-4 TODO\r\n      //52: () => this.digitArgument(4),\r\n      // M-5 TODO\r\n      //53: () => this.digitArgument(5),\r\n      // M-6 TODO\r\n      //54: () => this.digitArgument(6),\r\n      // M-7 TODO\r\n      //55: () => this.digitArgument(7),\r\n      // M-8 TODO\r\n      //56: () => this.digitArgument(8),\r\n      // M-9 TODO\r\n      //57: () => this.digitArgument(9),\r\n      // M-- TODO\r\n      //189: () => this.digitArgument('-'),\r\n      // M-f TODO\r\n      //71: () => this.abort,\r\n      // M-r TODO\r\n      //82: this.revertLine,\r\n      // M-SPACE TODO\r\n      //32: this.setMark,\r\n    };\r\n    var metaShiftCodes: keyMap = {\r\n      // TODO hook in\r\n      // M-<\r\n      188: beginningOfHistory,\r\n      // M->\r\n      190: endOfHistory,\r\n      // M-_\r\n      189: yankLastArg\r\n      // M-? TODO\r\n      //191: this.possibleCompletions,\r\n      // M-* TODO\r\n      //56: this.insertCompletions,\r\n    };\r\n    var metaCtrlCodes: keyMap = {\r\n      // M-C-y\r\n      89: yankNthArg\r\n      // M-C-] TODO\r\n      //221: this.characterSearchBackward,\r\n      // M-C-j TODO !!!\r\n      //74: this.viEditingMode,\r\n    };\r\n    if (state.acceptInput) {\r\n      if (e.altKey) {\r\n        if (e.ctrlKey) {\r\n          if (e.keyCode in metaCtrlCodes) {\r\n            metaCtrlCodes[e.keyCode]();\r\n            e.preventDefault();\r\n          }\r\n        } else if (e.shiftKey) {\r\n          if (e.keyCode in metaShiftCodes) {\r\n            metaShiftCodes[e.keyCode]();\r\n            e.preventDefault();\r\n          }\r\n        } else if (e.keyCode in metaCodes) {\r\n          metaCodes[e.keyCode]();\r\n          e.preventDefault();\r\n        }\r\n        e.preventDefault();\r\n      } else if (e.ctrlKey) {\r\n        if (e.keyCode in ctrlCodes) {\r\n          ctrlCodes[e.keyCode]();\r\n          e.preventDefault();\r\n        }\r\n        e.preventDefault();\r\n      } else if (e.keyCode in keyCodes) {\r\n        keyCodes[e.keyCode]();\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  };\r\n  const change = () => {\r\n    let idx = 0;\r\n    for (; idx < typer.length && idx < typerRef.current!.value.length; idx++) {\r\n      if (typer[idx] != typerRef.current!.value[idx]) {\r\n        break;\r\n      }\r\n    }\r\n    let insert = typerRef.current!.value.substring(idx);\r\n    let replace = typer.length - idx;\r\n    if (lastCommand == ConsoleCommand.Search) {\r\n      setTyper(typerRef.current!.value);\r\n      setState({\r\n        ...state,\r\n        searchText: state.searchInit\r\n          ? insert\r\n          : textInsert(insert, state.searchText, replace)\r\n        // typer: typerRef.current.value\r\n      });\r\n      triggerSearch();\r\n    } else {\r\n      consoleInsert(insert, replace);\r\n      setTyper(typerRef.current!.value);\r\n      setLastCommand(ConsoleCommand.Default);\r\n      // setState({\r\n      //   ...state,\r\n      //   // ...consoleInsert(insert, replace),\r\n      //   // typer: typerRef.current.value\r\n      //   // lastCommand: ConsoleCommand.Default\r\n      // });\r\n      scrollToBottom();\r\n    }\r\n  };\r\n  const paste = (e: React.ClipboardEvent<HTMLTextAreaElement>) => {\r\n    let insert = e.clipboardData.getData('text');\r\n    if (lastCommand == ConsoleCommand.Search) {\r\n      setTyper(typerRef.current!.value);\r\n      setState({\r\n        ...state,\r\n        searchText: state.searchInit\r\n          ? insert\r\n          : textInsert(insert, state.searchText)\r\n        // typer: typerRef.current.value\r\n      });\r\n      triggerSearch();\r\n    } else {\r\n      consoleInsert(insert);\r\n      setLastCommand(ConsoleCommand.Default);\r\n      // setState({\r\n      //   ...state,\r\n      //   // ...consoleInsert(insert)\r\n      //   // lastCommand: ConsoleCommand.Default\r\n      // });\r\n\r\n      scrollToBottom();\r\n    }\r\n    e.preventDefault();\r\n  };\r\n  // Commands for Moving\r\n  const beginningOfLine = () => {\r\n    setPoint(0);\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Default);\r\n    setState({\r\n      ...state\r\n      // point: 0,\r\n      // argument: null,\r\n      // lastCommand: ConsoleCommand.Default\r\n    });\r\n    scrollToBottom();\r\n  };\r\n  const endOfLine = () => {\r\n    setPoint(promptText.length);\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Default);\r\n    // setState({\r\n    //   ...state,\r\n    //   // point: promptText.length,\r\n    //   // argument: null,\r\n    //   // lastCommand: ConsoleCommand.Default\r\n    // });\r\n    scrollToBottom();\r\n  };\r\n  const forwardChar = () => {\r\n    setPoint(movePoint(1));\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Default);\r\n    // setState({\r\n    //   ...state,\r\n    //   // point: movePoint(1),\r\n    //   // argument: null,\r\n    //   lastCommand: ConsoleCommand.Default\r\n    // });\r\n    scrollToBottom();\r\n  };\r\n  const backwardChar = () => {\r\n    setPoint(movePoint(-1));\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Default);\r\n    // setState({\r\n    //   ...state,\r\n    //   // point: movePoint(-1),\r\n    //   // argument: null,\r\n    //   lastCommand: ConsoleCommand.Default\r\n    // });\r\n    scrollToBottom();\r\n  };\r\n  const forwardWord = () => {\r\n    setPoint(nextWord());\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Default);\r\n    // setState({\r\n    //   ...state,\r\n    //   // point: nextWord(),\r\n    //   // argument: null,\r\n    //   lastCommand: ConsoleCommand.Default\r\n    // });\r\n    scrollToBottom();\r\n  };\r\n  const backwardWord = () => {\r\n    setPoint(previousWord());\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Default);\r\n    // setState({\r\n    //   ...state,\r\n    //   // point: previousWord(),\r\n    //   // argument: null,\r\n    //   lastCommand: ConsoleCommand.Default\r\n    // });\r\n    scrollToBottom();\r\n  };\r\n  // Commands for Manipulating the History\r\n  const acceptLine = () => {\r\n    typerRef.current!.value = '';\r\n    if (props.continue!(promptText)) {\r\n      consoleInsert('\\n');\r\n      setTyper('');\r\n      setLastCommand(ConsoleCommand.Default);\r\n      setState({\r\n        ...state\r\n        // ...consoleInsert(\"\\n\"),\r\n        // typer: \"\"\r\n        // lastCommand: ConsoleCommand.Default\r\n      });\r\n\r\n      scrollToBottom();\r\n    } else {\r\n      let command = promptText;\r\n      let history = state.history;\r\n      let log = state.log; //.slice(); // sliceは必要か？\r\n      if (!history || history[history.length - 1] != command) {\r\n        history.push(command);\r\n      }\r\n      log.push({\r\n        label: state.currLabel,\r\n        command: command,\r\n        message: []\r\n      });\r\n      setPromptText('');\r\n      setPoint(0);\r\n      setRestoreText('');\r\n      setArgument(undefined);\r\n      setLastCommand(ConsoleCommand.Default);\r\n      setTyper('');\r\n      setState({\r\n        ...state,\r\n        acceptInput: false,\r\n        // typer: \"\",\r\n        // point: 0,\r\n        // promptText: \"\",\r\n        // restoreText: \"\",\r\n        log: log,\r\n        history: history,\r\n        historyn: 0\r\n        // argument: null,\r\n        // lastCommand: ConsoleCommand.Default\r\n      });\r\n      // () => {\r\n      scrollToBottom();\r\n      if (props.handler) {\r\n        props.handler(command);\r\n      } else {\r\n        enter(); //this.return();\r\n      }\r\n      // }\r\n    }\r\n  };\r\n  const previousHistory = () => {\r\n    rotateHistory(-1);\r\n  };\r\n  const nextHistory = () => {\r\n    rotateHistory(1);\r\n  };\r\n  const beginningOfHistory = () => {\r\n    rotateHistory(-state.history.length);\r\n  };\r\n  const endOfHistory = () => {\r\n    rotateHistory(state.history.length);\r\n  };\r\n  const triggerSearch = () => {\r\n    if (state.searchDirection == SearchDirection.Reverse) {\r\n      reverseSearchHistory();\r\n    } else {\r\n      forwardSearchHistory();\r\n    }\r\n  };\r\n  const reverseSearchHistory = () => {\r\n    if (lastCommand == ConsoleCommand.Search) {\r\n      setArgument(`(reverse-i-search)\\`${state.searchText}': `);\r\n      setLastCommand(ConsoleCommand.Search);\r\n      setState({\r\n        ...state,\r\n        ...searchHistory(SearchDirection.Reverse, true)\r\n        // argument: `(reverse-i-search)\\`${state.searchText}': `,\r\n        // lastCommand: ConsoleCommand.Search\r\n      });\r\n\r\n      scrollToBottom();\r\n    } else {\r\n      setArgument(`(reverse-i-search)\\`': `);\r\n      setLastCommand(ConsoleCommand.Search);\r\n      setState({\r\n        ...state,\r\n        searchDirection: SearchDirection.Reverse,\r\n        searchInit: true\r\n        // argument: `(reverse-i-search)\\`': `,\r\n        // lastCommand: ConsoleCommand.Search\r\n      });\r\n      scrollToBottom();\r\n    }\r\n  };\r\n  const forwardSearchHistory = () => {\r\n    if (lastCommand == ConsoleCommand.Search) {\r\n      setArgument(`(forward-i-search)\\`${state.searchText}': `);\r\n      setLastCommand(ConsoleCommand.Search);\r\n      setState({\r\n        ...state,\r\n        ...searchHistory(SearchDirection.Forward, true)\r\n        // argument: `(forward-i-search)\\`${state.searchText}': `,\r\n        // lastCommand: ConsoleCommand.Search\r\n      });\r\n      scrollToBottom();\r\n    } else {\r\n      setArgument(`(forward-i-search)\\`': `);\r\n      setLastCommand(ConsoleCommand.Search);\r\n      setState({\r\n        ...state,\r\n        searchDirection: SearchDirection.Forward,\r\n        searchInit: true\r\n        // argument: `(forward-i-search)\\`': `,\r\n        // lastCommand: ConsoleCommand.Search\r\n      });\r\n      scrollToBottom();\r\n    }\r\n  };\r\n  const nonIncrementalReverseSearchHistory = () => {\r\n    // TODO\r\n  };\r\n  const nonIncrementalForwardSearchHistory = () => {\r\n    // TODO\r\n  };\r\n  // const historySearchBackward = () => {\r\n  //   // TODO\r\n  // };\r\n  // const historySearchForward = () => {\r\n  //   // TODO\r\n  // };\r\n  // const historySubstringSearchBackward = () => {\r\n  //   // TODO\r\n  // };\r\n  // const historySubstringSearchForward = () => {\r\n  //   // TODO\r\n  // };\r\n  const yankNthArg = () => {\r\n    // TODO\r\n  };\r\n  const yankLastArg = () => {\r\n    // TODO\r\n  };\r\n  // Commands for Changing Text\r\n  const deleteChar = () => {\r\n    if (point < promptText.length) {\r\n      setPromptText(\r\n        promptText.substring(0, point) + promptText.substring(point + 1)\r\n      );\r\n      setArgument(undefined);\r\n      setLastCommand(ConsoleCommand.Default);\r\n      // setState({\r\n      //   ...state,\r\n      //   // promptText:\r\n      //   //   promptText.substring(0, state.point) +\r\n      //   //   promptText.substring(state.point + 1),\r\n      //   // argument: null,\r\n      //   lastCommand: ConsoleCommand.Default\r\n      // });\r\n      scrollToBottom();\r\n    }\r\n  };\r\n  const backwardDeleteChar = () => {\r\n    if (lastCommand == ConsoleCommand.Search) {\r\n      setTyper(typerRef.current!.value);\r\n      setState({\r\n        ...state,\r\n        searchText: state.searchText.substring(0, state.searchText.length - 1)\r\n        // typer: typerRef.current.value\r\n      });\r\n      triggerSearch();\r\n    } else if (point > 0) {\r\n      setPromptText(\r\n        promptText.substring(0, point - 1) + promptText.substring(point)\r\n      );\r\n      setPoint(movePoint(-1));\r\n      setArgument(undefined);\r\n      setLastCommand(ConsoleCommand.Default);\r\n      // setState({\r\n      //   ...state,\r\n      //   // point: movePoint(-1),\r\n      //   // promptText:\r\n      //   //   state.promptText.substring(0, state.point - 1) +\r\n      //   //   state.promptText.substring(state.point),\r\n      //   // argument: null,\r\n      //   lastCommand: ConsoleCommand.Default\r\n      // });\r\n      scrollToBottom();\r\n    }\r\n  };\r\n  // Killing and Yanking\r\n  const killLine = () => {\r\n    let kill = state.kill;\r\n    if (lastCommand == ConsoleCommand.Kill) {\r\n      kill[0] = kill[0] + promptText.substring(point);\r\n    } else {\r\n      kill.unshift(promptText.substring(point));\r\n    }\r\n    setPromptText(promptText.substring(0, point));\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Kill);\r\n    setState({\r\n      ...state,\r\n      // promptText: promptText.substring(0, state.point),\r\n      kill: kill,\r\n      killn: 0\r\n      // argument: null,\r\n      // lastCommand: ConsoleCommand.Kill\r\n    });\r\n    scrollToBottom();\r\n  };\r\n  const backwardKillLine = () => {\r\n    let kill = state.kill;\r\n    if (lastCommand == ConsoleCommand.Kill) {\r\n      kill[0] = promptText.substring(0, point) + kill[0];\r\n    } else {\r\n      kill.unshift(promptText.substring(0, point));\r\n    }\r\n    setPoint(0);\r\n    setPromptText(promptText.substring(point));\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Kill);\r\n    setState({\r\n      ...state,\r\n      // point: 0,\r\n      // promptText: state.promptText.substring(state.point),\r\n      kill: kill,\r\n      killn: 0\r\n      // argument: null,\r\n      // lastCommand: ConsoleCommand.Kill\r\n    });\r\n    scrollToBottom();\r\n  };\r\n  // const killWholeLine = () => {\r\n  //   let kill = state.kill;\r\n  //   if (lastCommand == ConsoleCommand.Kill) {\r\n  //     kill[0] =\r\n  //       promptText.substring(0, point) + kill[0] + promptText.substring(point);\r\n  //   } else {\r\n  //     kill.unshift(promptText);\r\n  //   }\r\n  //   setPoint(0);\r\n  //   setPromptText(\"\");\r\n  //   setArgument(undefined);\r\n  //   setLastCommand(ConsoleCommand.Kill);\r\n  //   setState({\r\n  //     ...state,\r\n  //     // point: 0,\r\n  //     // promptText: \"\",\r\n  //     kill: kill,\r\n  //     killn: 0\r\n  //     // argument: null,\r\n  //     // lastCommand: ConsoleCommand.Kill\r\n  //   });\r\n  //   scrollToBottom();\r\n  // };\r\n  const killWord = () => {\r\n    let kill = state.kill;\r\n    if (lastCommand == ConsoleCommand.Kill) {\r\n      kill[0] = kill[0] + promptText.substring(point, nextWord());\r\n    } else {\r\n      kill.unshift(promptText.substring(point, nextWord()));\r\n    }\r\n\r\n    setPromptText(\r\n      promptText.substring(0, point) + promptText.substring(nextWord())\r\n    );\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Kill);\r\n    setState({\r\n      ...state,\r\n      // promptText:\r\n      //   promptText.substring(0, state.point) +\r\n      //   promptText.substring(nextWord()),\r\n      kill: kill,\r\n      killn: 0\r\n      // argument: null,\r\n      // lastCommand: ConsoleCommand.Kill\r\n    });\r\n    scrollToBottom();\r\n  };\r\n  const backwardKillWord = () => {\r\n    let kill = state.kill;\r\n    if (lastCommand == ConsoleCommand.Kill) {\r\n      kill[0] = promptText.substring(previousWord(), point) + kill[0];\r\n    } else {\r\n      kill.unshift(promptText.substring(previousWord(), point));\r\n    }\r\n\r\n    setPromptText(\r\n      promptText.substring(0, previousWord()) + promptText.substring(point)\r\n    );\r\n    setPoint(previousWord());\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Kill);\r\n    setState({\r\n      ...state,\r\n      // point: previousWord(),\r\n      // promptText:\r\n      //   state.promptText.substring(0, previousWord()) +\r\n      //   state.promptText.substring(state.point),\r\n      kill: kill,\r\n      killn: 0\r\n      // argument: null,\r\n      // lastCommand: ConsoleCommand.Kill\r\n    });\r\n    scrollToBottom();\r\n  };\r\n  const yank = () => {\r\n    setLastCommand(ConsoleCommand.Yank);\r\n    consoleInsert(state.kill[state.killn]);\r\n    // setState({\r\n    //   ...state,\r\n    //   ...consoleInsert(state.kill[state.killn]),\r\n    //   // lastCommand: ConsoleCommand.Yank\r\n    // });\r\n    scrollToBottom();\r\n  };\r\n  const yankPop = () => {\r\n    if (lastCommand == ConsoleCommand.Yank) {\r\n      let killn = rotateRing(1, state.killn, state.kill.length);\r\n      setLastCommand(ConsoleCommand.Yank);\r\n      consoleInsert(state.kill[killn], state.kill[state.killn].length);\r\n      setState({\r\n        ...state,\r\n        // ...consoleInsert(state.kill[killn], state.kill[state.killn].length),\r\n\r\n        killn: killn\r\n        // lastCommand: ConsoleCommand.Yank\r\n      });\r\n\r\n      scrollToBottom();\r\n    }\r\n  };\r\n  // Numeric Arguments\r\n  // Completing\r\n  const complete = () => {\r\n    if (props.complete) {\r\n      // Split text and find current word\r\n      let words = promptText.split(' ');\r\n      let curr = 0;\r\n      let idx = words[0].length;\r\n      while (idx < point && curr + 1 < words.length) {\r\n        idx += words[++curr].length + 1;\r\n      }\r\n\r\n      let completions = props.complete(words, curr, promptText);\r\n      if (completions.length == 1) {\r\n        // Perform completion\r\n        words[curr] = completions[0];\r\n        let newPoint = -1;\r\n        for (let i = 0; i <= curr; i++) {\r\n          newPoint += words[i].length + 1;\r\n        }\r\n        setPoint(newPoint);\r\n        setPromptText(words.join(' '));\r\n        setArgument(undefined);\r\n        setLastCommand(ConsoleCommand.Default);\r\n        // setState({\r\n        //   ...state,\r\n        //   // point: point,\r\n        //   // promptText: words.join(\" \"),\r\n        //   // argument: null,\r\n        //   lastCommand: ConsoleCommand.Default\r\n        // });\r\n        scrollToBottom();\r\n      } else if (completions.length > 1) {\r\n        // show completions\r\n        let log = state.log;\r\n        log.push({\r\n          label: state.currLabel,\r\n          command: promptText,\r\n          message: [\r\n            {\r\n              type: 'completion',\r\n              value: [completions.join('\\t')]\r\n            }\r\n          ]\r\n        });\r\n        setArgument(undefined);\r\n        setLastCommand(ConsoleCommand.Default);\r\n        setState({\r\n          ...state,\r\n          currLabel: nextLabel(),\r\n          log: log\r\n          // argument: null,\r\n          // lastCommand: ConsoleCommand.Default\r\n        });\r\n        scrollToBottom();\r\n      }\r\n    }\r\n  };\r\n  // Keyboard Macros\r\n  // Miscellaneous\r\n  const prefixMeta = () => {\r\n    if (lastCommand == ConsoleCommand.Search) {\r\n      setArgument(undefined);\r\n      setLastCommand(ConsoleCommand.Default);\r\n      // setState({\r\n      //   ...state,\r\n      //   // argument: null,\r\n      //   lastCommand: ConsoleCommand.Default\r\n      // });\r\n    }\r\n    // TODO Meta prefixed state\r\n  };\r\n  const cancelCommand = () => {\r\n    if (state.acceptInput) {\r\n      // Typing command\r\n      typerRef.current!.value = '';\r\n      let log = state.log;\r\n      log.push({\r\n        label: state.currLabel,\r\n        command: promptText,\r\n        message: []\r\n      });\r\n      setPoint(0);\r\n      setPromptText('');\r\n      setRestoreText('');\r\n      setArgument(undefined);\r\n      setLastCommand(ConsoleCommand.Default);\r\n      setTyper('');\r\n      setState({\r\n        ...state,\r\n        // typer: \"\",\r\n        // point: 0,\r\n        // promptText: \"\",\r\n        // restoreText: \"\",\r\n        log: log,\r\n        historyn: 0\r\n        // argument: null,\r\n        // lastCommand: ConsoleCommand.Default\r\n      });\r\n      scrollToBottom();\r\n    } else {\r\n      // command is executing, call handler\r\n      props.cancel!();\r\n    }\r\n  };\r\n  // Helper functions\r\n  const textInsert = (\r\n    insert: string,\r\n    text: string,\r\n    replace: number = 0,\r\n    point: number = text.length\r\n  ): string => {\r\n    return text.substring(0, point - replace) + insert + text.substring(point);\r\n  };\r\n  const consoleInsert = (insert: string, replace: number = 0) => {\r\n    let newPromptText = textInsert(insert, promptText, replace, point);\r\n    setPoint(\r\n      movePoint(\r\n        insert.length - replace,\r\n        insert.length - replace + promptText.length\r\n      )\r\n    );\r\n    setPromptText(newPromptText);\r\n    setRestoreText(newPromptText);\r\n    setArgument(undefined);\r\n    setLastCommand(ConsoleCommand.Default);\r\n    // return {\r\n    //   // point: movePoint(\r\n    //   //   insert.length - replace,\r\n    //   //   insert.length - replace + promptText.length\r\n    //   // ),\r\n    //   // promptText: newPromptText,\r\n    //   // restoreText: newPromptText,\r\n    //   // argument: null as string,\r\n    //   lastCommand: ConsoleCommand.Default\r\n    // };\r\n  };\r\n  const movePoint = (n: number, max: number = promptText.length) => {\r\n    let pos = point + n;\r\n    if (pos < 0) {\r\n      return 0;\r\n    }\r\n    if (pos > max) {\r\n      return max;\r\n    } else {\r\n      return pos;\r\n    }\r\n  };\r\n  const nextWord = (): number => {\r\n    // Find first alphanumeric char after first non-alphanumeric char\r\n    let search = /\\W\\w/.exec(promptText.substring(point));\r\n    if (search) {\r\n      return search.index + point + 1;\r\n    } else {\r\n      return promptText.length;\r\n    }\r\n  };\r\n  const previousWord = (): number => {\r\n    // Find first non-alphanumeric char after first alphanumeric char in reverse\r\n    let search = /\\W\\w(?!.*\\W\\w)/.exec(promptText.substring(0, point - 1));\r\n    if (search) {\r\n      return search.index + 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n  const rotateRing = (\r\n    n: number,\r\n    ringn: number,\r\n    ring: number,\r\n    circular: boolean = true\r\n  ): number => {\r\n    if (ring == 0) return 0;\r\n    if (circular) {\r\n      return (ring + ((ringn + n) % ring)) % ring;\r\n    } else {\r\n      ringn = ringn - n;\r\n      if (ringn < 0) {\r\n        return 0;\r\n      } else if (ringn >= ring) {\r\n        return ring;\r\n      } else {\r\n        return ringn;\r\n      }\r\n    }\r\n  };\r\n  const rotateHistory = (n: number) => {\r\n    let historyn = rotateRing(n, state.historyn, state.history.length, false);\r\n    if (historyn == 0) {\r\n      setPoint(restoreText.length);\r\n      setPromptText(restoreText);\r\n      setArgument(undefined);\r\n      setLastCommand(ConsoleCommand.Default);\r\n      setState({\r\n        ...state,\r\n        // point: state.restoreText.length,\r\n        // promptText: state.restoreText,\r\n        historyn: historyn\r\n        // argument: null,\r\n        // lastCommand: ConsoleCommand.Default\r\n      });\r\n      scrollToBottom();\r\n    } else {\r\n      // let promptText = state.history[state.history.length - historyn];\r\n      setPoint(promptText.length);\r\n      setPromptText(state.history[state.history.length - historyn]);\r\n      setArgument(undefined);\r\n      setLastCommand(ConsoleCommand.Default);\r\n      setState({\r\n        ...state,\r\n        // point: promptText.length,\r\n        // promptText: promptText,\r\n        historyn: historyn\r\n        // argument: null,\r\n        // lastCommand: ConsoleCommand.Default\r\n      });\r\n      scrollToBottom();\r\n    }\r\n  };\r\n  const searchHistory = (\r\n    direction: SearchDirection = state.searchDirection,\r\n    next: boolean = false\r\n  ) => {\r\n    let idx = state.historyn;\r\n    let inc = direction == SearchDirection.Reverse ? 1 : -1;\r\n    if (next) {\r\n      idx = idx + inc;\r\n    }\r\n    for (; idx > 0 && idx <= state.history.length; idx = idx + inc) {\r\n      let entry = state.history[state.history.length - idx];\r\n      let newPoint = entry.indexOf(state.searchText);\r\n      if (newPoint > -1) {\r\n        setPoint(newPoint);\r\n        setPromptText(entry);\r\n        return {\r\n          // point: point,\r\n          // promptText: entry,\r\n          searchDirection: direction,\r\n          searchInit: false,\r\n          historyn: idx\r\n        };\r\n      }\r\n    }\r\n    return {\r\n      searchDirection: direction,\r\n      searchInit: false\r\n    };\r\n  };\r\n  // DOM management\r\n  const scrollSemaphoreRef = useRef(0);\r\n  const scrollIfBottom = () => {\r\n    if (\r\n      scrollSemaphoreRef.current > 0 ||\r\n      containerRef.current!.scrollTop ==\r\n        containerRef.current!.scrollHeight - containerRef.current!.offsetHeight\r\n    ) {\r\n      scrollSemaphoreRef.current++;\r\n      return scrollIfBottomTrue();\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const scrollIfBottomTrue = () => {\r\n    scrollToBottom();\r\n    scrollSemaphoreRef.current--;\r\n  };\r\n  const scrollToBottom = () => {\r\n    containerRef.current!.scrollTop = containerRef.current!.scrollHeight;\r\n    let rect = focusRef.current!.getBoundingClientRect();\r\n    if (\r\n      rect.top < 0 ||\r\n      rect.left < 0 ||\r\n      rect.bottom >\r\n        (window.innerHeight || document.documentElement.clientHeight) ||\r\n      rect.right > (window.innerWidth || document.documentElement.clientWidth)\r\n    ) {\r\n      typerRef.current!.scrollIntoView(false);\r\n    }\r\n  };\r\n\r\n  // コンポーネントのインスタンスが持つメソッドを宣言\r\n  useImperativeHandle(ref, () => ({\r\n    log(...messages: any[]) {\r\n      log(...messages);\r\n    },\r\n    enter() {\r\n      enter();\r\n    }\r\n  }));\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={\r\n        'react-console-container ' +\r\n        (state.focus ? 'react-console-focus' : 'react-console-nofocus')\r\n      }\r\n      onClick={focus}\r\n    >\r\n      {props.welcomeMessage ? (\r\n        <div className=\"react-console-message react-console-welcome\">\r\n          {props.welcomeMessage}\r\n        </div>\r\n      ) : null}\r\n      {state.log.map((val: LogEntry, index) => {\r\n        return [\r\n          <ConsolePrompt\r\n            key={'console-prompt-' + index}\r\n            label={val.label}\r\n            value={val.command}\r\n          />,\r\n          ...val.message.map((val: LogMessage, idx: number) => {\r\n            return (\r\n              <ConsoleMessage\r\n                key={'console-message-' + idx}\r\n                type={val.type}\r\n                value={val.value}\r\n              />\r\n            );\r\n          })\r\n        ];\r\n      })}\r\n      {state.acceptInput ? (\r\n        <ConsolePrompt\r\n          label={state.currLabel}\r\n          value={promptText}\r\n          point={point}\r\n          argument={argument}\r\n        />\r\n      ) : null}\r\n      <div style={{ overflow: 'hidden', height: 1, width: 1 }}>\r\n        <textarea\r\n          ref={typerRef}\r\n          className=\"react-console-typer\"\r\n          autoComplete=\"off\"\r\n          autoCorrect=\"off\"\r\n          autoCapitalize=\"off\"\r\n          spellCheck={false}\r\n          style={{\r\n            outline: 'none',\r\n            color: 'transparent',\r\n            backgroundColor: 'transparent',\r\n            border: 'none',\r\n            resize: 'none',\r\n            overflow: 'hidden'\r\n          }}\r\n          onBlur={blur}\r\n          onKeyDown={keyDown}\r\n          onChange={change}\r\n          onPaste={paste}\r\n        />\r\n      </div>\r\n      <div ref={focusRef}>&nbsp;</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nConsole.defaultProps = {\r\n  promptLabel: '> ',\r\n  continue: function() {\r\n    return false;\r\n  },\r\n  cancel: function() {}\r\n};\r\n\r\nexport default Console;\r\n"],"sourceRoot":""}